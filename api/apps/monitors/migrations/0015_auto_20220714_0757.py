# Generated by Django 4.0.2 on 2022-07-14 07:57

from django.db import migrations


def get_baseline_and_target_daily_increase(monitor_element) -> tuple[float, float]:
    total_monitoring_days = (monitor_element.monitor.end_date - monitor_element.monitor.start_date).days + 1
    daily_baseline_increase = monitor_element.baseline / total_monitoring_days
    daily_target_increase = monitor_element.target / total_monitoring_days

    return daily_baseline_increase, daily_target_increase


def create_default_monitor_element_phase(apps, *args):
    MonitorElement = apps.get_model('monitors', 'MonitorElement')
    MonitorElementPhase = apps.get_model('monitors', 'MonitorElementPhase')

    for monitor_element in MonitorElement.objects.all():
        baseline, target = get_baseline_and_target_daily_increase(monitor_element)

        MonitorElementPhase.objects.create(
            monitor_element=monitor_element,
            name='Default',
            start_date=monitor_element.monitor.start_date.date(),
            end_date=monitor_element.monitor.end_date.date(),
            target=round(target, 2),
            baseline=round(baseline, 2),
        )


class Migration(migrations.Migration):

    dependencies = [
        ('monitors', '0014_monitorelementphase'),
    ]

    operations = [migrations.RunPython(create_default_monitor_element_phase)]
