import pytest

from apps.projects.factories import PlanFactory, PlanWellRelationFactory, ProjectFactory
from apps.rigs.factories import CustomSemiRigFactory
from apps.rigs.models import Airgap, HighMediumLow, TopsideDesign
from apps.rigs.services.co2calculator.semi import (
    SemiCapacitiesResult,
    SemiCO2PerWell,
    SemiCO2PerWellResult,
    SemiCO2Result,
    SemiDeckEfficiencyResult,
    SemiTopsideEfficiencyResult,
    SemiTransitResult,
    SemiWoWResult,
    calculate_ahv_fuel_consumption_per_location,
    calculate_custom_ahv_fuel_consumption_per_location,
    calculate_custom_semi_ata_co2_per_well,
    calculate_custom_semi_capacities,
    calculate_custom_semi_capacities_score,
    calculate_custom_semi_co2,
    calculate_custom_semi_co2_per_well,
    calculate_custom_semi_co2_score,
    calculate_custom_semi_common_co2_per_well,
    calculate_custom_semi_deck_efficiency,
    calculate_custom_semi_deck_efficiency_score,
    calculate_custom_semi_dp_co2_per_well,
    calculate_custom_semi_metocean_factor,
    calculate_custom_semi_rig_status_score,
    calculate_custom_semi_topside_efficiency,
    calculate_custom_semi_topside_efficiency_score,
    calculate_custom_semi_transit,
    calculate_custom_semi_well_operational_days,
    calculate_custom_semi_wow,
    calculate_custom_semi_wow_score,
    calculate_reference_semi_capacities,
    calculate_reference_semi_co2,
    calculate_reference_semi_deck_efficiency,
    calculate_reference_semi_rig_status,
    calculate_reference_semi_topside_efficiency,
    calculate_reference_semi_wow,
    calculate_semi_ata_co2_per_well,
    calculate_semi_capacities,
    calculate_semi_co2,
    calculate_semi_common_co2_per_well,
    calculate_semi_deck_efficiency,
    calculate_semi_dp_co2_per_well,
    calculate_semi_metocean_factor,
    calculate_semi_topside_efficiency,
    calculate_semi_transit,
    calculate_semi_well_operational_days,
    calculate_semi_well_reference_operational_days,
    calculate_semi_wow,
)
from apps.wells.factories import CustomWellFactory


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                equipment_load=HighMediumLow.HIGH,
                quarters_capacity=160,
                hull_design_eco=4,
                dp=True,
                total_anchors=8,
                displacement=74045.2857142857,
                hull_breadth_ft=267,
                hull_depth_ft=168.0000,
                hull_length_ft=384,
                derrick_height_ft=212,
                dual_derrick=False,
                drawworks_hp=7460,
                mudpump_total_hp=8800,
                engine_hp=7350,
                engine_qty_1=7,
                generator_kw_1_kw=5500,
                generator_qty_1=7,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=73.83330914285715,
                equipment_load=4.0000,
                quarters_capacity=4.571428571428571,
                hull_design_eco_score=6.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=7.404528571428569,
                vessel_size=8.612352,
                derrick_height_ft=4.2400,
                dual_derrick=2.0000,
                drawworks_hp_hp=3.7300,
                mud_total_hp=4.4000,
                engine_horsepower_hp=3.6750,
                engine_quantity=1.5000,
                generator_effect_kw=2.7500,
                generator_qty=1.5000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                equipment_load=HighMediumLow.MEDIUM,
                quarters_capacity=132,
                hull_design_eco=6,
                dp=True,
                total_anchors=8,
                displacement=59020.6666666667,
                hull_breadth_ft=235,
                hull_depth_ft=168.0000,
                hull_length_ft=312,
                derrick_height_ft=190,
                dual_derrick=False,
                drawworks_hp=4600,
                mudpump_total_hp=8800,
                engine_hp=6250,
                engine_qty_1=8,
                generator_kw_1_kw=4280,
                generator_qty_1=8,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=61.04737523809524,
                equipment_load=2.0000,
                quarters_capacity=3.7714285714285714,
                hull_design_eco_score=4.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=5.90206666666667,
                vessel_size=6.15888,
                derrick_height_ft=3.8000,
                dual_derrick=2.0000,
                drawworks_hp_hp=2.3000,
                mud_total_hp=4.4000,
                engine_horsepower_hp=3.1250,
                engine_quantity=1.0000,
                generator_effect_kw=2.1400,
                generator_qty=1.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                equipment_load=HighMediumLow.MEDIUM,
                quarters_capacity=124,
                hull_design_eco=8,
                dp=True,
                total_anchors=8,
                displacement=36164.6,
                hull_breadth_ft=215,
                hull_depth_ft=120.0000,
                hull_length_ft=322,
                derrick_height_ft=144,
                dual_derrick=False,
                drawworks_hp=4600,
                mudpump_total_hp=7050,
                engine_hp=6350,
                engine_qty_1=7,
                generator_kw_1_kw=4724,
                generator_qty_1=7,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=54.005117142857145,
                equipment_load=2.0000,
                quarters_capacity=3.5428571428571427,
                hull_design_eco_score=2.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=3.61646,
                vessel_size=4.1538,
                derrick_height_ft=2.8800,
                dual_derrick=2.0000,
                drawworks_hp_hp=2.3000,
                mud_total_hp=3.5250,
                engine_horsepower_hp=3.1750,
                engine_quantity=1.5000,
                generator_effect_kw=2.3620,
                generator_qty=1.5000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                equipment_load=HighMediumLow.HIGH,
                quarters_capacity=172,
                hull_design_eco=5,
                dp=True,
                total_anchors=8,
                displacement=59847.6,
                hull_breadth_ft=280,
                hull_depth_ft=140.0000,
                hull_length_ft=332,
                derrick_height_ft=206,
                dual_derrick=False,
                drawworks_hp=6080,
                mudpump_total_hp=8000,
                engine_hp=6020,
                engine_qty_1=8,
                generator_kw_1_kw=5400,
                generator_qty_1=8,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=66.72624571428571,
                equipment_load=4.0000,
                quarters_capacity=4.914285714285715,
                hull_design_eco_score=5.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=5.98476,
                vessel_size=6.5072,
                derrick_height_ft=4.1200,
                dual_derrick=2.0000,
                drawworks_hp_hp=3.0400,
                mud_total_hp=4.0000,
                engine_horsepower_hp=3.0100,
                engine_quantity=1.0000,
                generator_effect_kw=2.7000,
                generator_qty=1.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                equipment_load=HighMediumLow.MEDIUM,
                quarters_capacity=130,
                hull_design_eco=7,
                dp=True,
                total_anchors=8,
                displacement=47625.5,
                hull_breadth_ft=236,
                hull_depth_ft=123.0000,
                hull_length_ft=346,
                derrick_height_ft=184,
                dual_derrick=False,
                drawworks_hp=5175,
                mudpump_total_hp=7200,
                engine_hp=7423,
                engine_qty_1=6,
                generator_kw_1_kw=5535,
                generator_qty_1=6,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=60.295179714285716,
                equipment_load=2.0000,
                quarters_capacity=3.7142857142857144,
                hull_design_eco_score=3.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=4.76255,
                vessel_size=5.021844,
                derrick_height_ft=3.6800,
                dual_derrick=2.0000,
                drawworks_hp_hp=2.5875,
                mud_total_hp=3.6000,
                engine_horsepower_hp=3.7115,
                engine_quantity=2.0000,
                generator_effect_kw=2.7675,
                generator_qty=2.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept H6',
            dict(
                equipment_load=HighMediumLow.HIGH,
                quarters_capacity=140,
                hull_design_eco=6,
                dp=True,
                total_anchors=8,
                displacement=71099.0,
                hull_breadth_ft=253,
                hull_depth_ft=150.0000,
                hull_length_ft=394,
                derrick_height_ft=160,
                dual_derrick=True,
                drawworks_hp=5000,
                mudpump_total_hp=8800,
                engine_hp=7107,
                engine_qty_1=8,
                generator_kw_1_kw=5300,
                generator_qty_1=8,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=68.33955,
                equipment_load=4.0000,
                quarters_capacity=4.0000,
                hull_design_eco_score=4.0000,
                dp=2.0000,
                total_anchors=4.0000,
                displacement=7.1099,
                vessel_size=7.47615,
                derrick_height_ft=3.2000,
                dual_derrick=4.0000,
                drawworks_hp_hp=2.5000,
                mud_total_hp=4.4000,
                engine_horsepower_hp=3.5535,
                engine_quantity=1.0000,
                generator_effect_kw=2.6500,
                generator_qty=1.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept H4',
            dict(
                equipment_load=HighMediumLow.MEDIUM,
                quarters_capacity=110,
                hull_design_eco=8,
                dp=False,
                total_anchors=8,
                displacement=49008.0,
                hull_breadth_ft=220,
                hull_depth_ft=131.0000,
                hull_length_ft=253,
                derrick_height_ft=170,
                dual_derrick=False,
                drawworks_hp=3000,
                mudpump_total_hp=4800,
                engine_hp=4440,
                engine_qty_1=4,
                generator_kw_1_kw=3100,
                generator_qty_1=4,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=52.20938714285714,
                equipment_load=2.0000,
                quarters_capacity=3.142857142857143,
                hull_design_eco_score=2.0000,
                dp=0.0000,
                total_anchors=4.0000,
                displacement=4.9008,
                vessel_size=3.64573,
                derrick_height_ft=3.4000,
                dual_derrick=2.0000,
                drawworks_hp_hp=1.5000,
                mud_total_hp=2.4000,
                engine_horsepower_hp=2.2200,
                engine_quantity=3.0000,
                generator_effect_kw=1.5500,
                generator_qty=3.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept H3',
            dict(
                equipment_load=HighMediumLow.LOW,
                quarters_capacity=100,
                hull_design_eco=10,
                dp=False,
                total_anchors=8,
                displacement=26053.5,
                hull_breadth_ft=221,
                hull_depth_ft=120.0000,
                hull_length_ft=355,
                derrick_height_ft=184,
                dual_derrick=False,
                drawworks_hp=3000,
                mudpump_total_hp=4800,
                engine_hp=3648,
                engine_qty_1=4,
                generator_kw_1_kw=2650,
                generator_qty_1=4,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=47.34879285714286,
                equipment_load=1.0000,
                quarters_capacity=2.857142857142857,
                hull_design_eco_score=0.0000,
                dp=0.0000,
                total_anchors=4.0000,
                displacement=2.60535,
                vessel_size=4.7073,
                derrick_height_ft=3.6800,
                dual_derrick=2.0000,
                drawworks_hp_hp=1.5000,
                mud_total_hp=2.4000,
                engine_horsepower_hp=1.8240,
                engine_quantity=3.0000,
                generator_effect_kw=1.3250,
                generator_qty=3.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                equipment_load=HighMediumLow.MEDIUM,
                quarters_capacity=130,
                hull_design_eco=6,
                dp=True,
                total_anchors=12,
                displacement=59715.75,
                hull_breadth_ft=318,
                hull_depth_ft=130.0000,
                hull_length_ft=381,
                derrick_height_ft=170,
                dual_derrick=False,
                drawworks_hp=3000,
                mudpump_total_hp=6600,
                engine_hp=7510,
                engine_qty_1=6,
                generator_kw_1_kw=5600,
                generator_qty_1=6,
                closed_bus=False,
                hybrid=False,
                hvac_heat_recovery=False,
                freshwater_cooling_systems=False,
                seawater_cooling_systems=False,
                operator_awareness_dashboard=False,
                hpu_optimization=False,
                optimized_heat_tracing_system=False,
                floodlighting_optimization=False,
                vfds_on_aux_machinery=False,
            ),
            SemiCO2Result(
                points=60.766130714285715,
                equipment_load=2.0000,
                quarters_capacity=3.7142857142857144,
                hull_design_eco_score=4.0000,
                dp=2.0000,
                total_anchors=1.0000,
                displacement=5.971575,
                vessel_size=7.87527,
                derrick_height_ft=3.4000,
                dual_derrick=2.0000,
                drawworks_hp_hp=1.5000,
                mud_total_hp=3.3000,
                engine_horsepower_hp=3.7550,
                engine_quantity=2.0000,
                generator_effect_kw=2.8000,
                generator_qty=2.0000,
                closed_bus=3.0000,
                hybrid=3.0000,
                hvac_heat_recovery=1.5000,
                freshwater_cooling_systems=1.0000,
                seawater_cooling_systems=2.0000,
                operator_awareness_dashboard=0.7500,
                hpu_optimization=0.5000,
                optimized_heat_tracing_system=1.0000,
                floodlighting_optimization=0.2000,
                vfds_on_aux_machinery=0.5000,
            ),
        ),
    ),
)
def test_calculate_semi_co2(name, input, output):
    result = calculate_semi_co2(**input)

    assert result == output


@pytest.mark.django_db
def test_calculate_reference_semi_co2():
    assert calculate_reference_semi_co2()['points'] == 73.83330914285715


@pytest.mark.django_db
def test_calculate_custom_semi_co2(concept_cs60):
    assert calculate_custom_semi_co2(concept_cs60) == SemiCO2Result(
        points=73.83330914285715,
        equipment_load=4.0000,
        quarters_capacity=4.571428571428571,
        hull_design_eco_score=6.0000,
        dp=2.0000,
        total_anchors=4.0000,
        displacement=7.404528571428569,
        vessel_size=8.612352,
        derrick_height_ft=4.2400,
        dual_derrick=2.0000,
        drawworks_hp_hp=3.7300,
        mud_total_hp=4.4000,
        engine_horsepower_hp=3.6750,
        engine_quantity=1.5000,
        generator_effect_kw=2.7500,
        generator_qty=1.5000,
        closed_bus=3.0000,
        hybrid=3.0000,
        hvac_heat_recovery=1.5000,
        freshwater_cooling_systems=1.0000,
        seawater_cooling_systems=2.0000,
        operator_awareness_dashboard=0.7500,
        hpu_optimization=0.5000,
        optimized_heat_tracing_system=1.0000,
        floodlighting_optimization=0.2000,
        vfds_on_aux_machinery=0.5000,
    )


@pytest.mark.django_db
def test_calculate_custom_semi_co2_score(concept_cs60):
    assert calculate_custom_semi_co2_score(concept_cs60) == 1


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=True,
                offline_stand_building=True,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=11.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=1.0000,
                offline_standbuilding=2.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=True,
                offline_stand_building=True,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=11.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=1.0000,
                offline_standbuilding=2.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=False,
                offline_stand_building=False,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=8.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=0.0000,
                offline_standbuilding=0.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=True,
                offline_stand_building=True,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=11.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=1.0000,
                offline_standbuilding=2.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=False,
                offline_stand_building=True,
                auto_pipe_handling=False,
                dual_activity=False,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=5.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=0.0000,
                offline_standbuilding=2.0000,
                auto_pipe_handling=0.0000,
                dual_activity=0.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept H6',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=True,
                tripsaver=True,
                offline_stand_building=True,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=13.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=3.0000,
                tripsaver=0,
                offline_standbuilding=2.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept H4',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=False,
                offline_stand_building=False,
                auto_pipe_handling=False,
                dual_activity=False,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=3.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=0.0000,
                offline_standbuilding=0.0000,
                auto_pipe_handling=0.0000,
                dual_activity=0.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept H3',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=False,
                offline_stand_building=False,
                auto_pipe_handling=False,
                dual_activity=False,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=3.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=0.0000,
                offline_standbuilding=0.0000,
                auto_pipe_handling=0.0000,
                dual_activity=0.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                topside_design=TopsideDesign.NOV,
                drillfloor_efficiency=HighMediumLow.MEDIUM,
                dual_derrick=False,
                tripsaver=True,
                offline_stand_building=True,
                auto_pipe_handling=True,
                dual_activity=True,
                drilltronic=False,
                dynamic_drilling_guideline=False,
                process_automation_platform=False,
                automatic_tripping=False,
            ),
            SemiTopsideEfficiencyResult(
                points=11.0500,
                topside_design=1.0500,
                drillfloor_efficiency=2.0000,
                dual_derrick=0.0000,
                tripsaver=1.0000,
                offline_standbuilding=2.0000,
                auto_pipe_handling=3.0000,
                dual_activity=2.0000,
                drilltronic=0.0000,
                dynamic_drilling_guide=0.0000,
                process_automation_platform=0.0000,
                automatic_tripping=0.0000,
            ),
        ),
    ),
)
def test_calculate_semi_topside_efficiency(name, input, output):
    result = calculate_semi_topside_efficiency(**input)

    assert result == output


@pytest.mark.django_db
def test_calculate_reference_semi_topside_efficiency():
    assert calculate_reference_semi_topside_efficiency()['points'] == 11.05


@pytest.mark.django_db
def test_calculate_custom_semi_topside_efficiency(concept_cs60):
    assert calculate_custom_semi_topside_efficiency(concept_cs60) == SemiTopsideEfficiencyResult(
        points=11.0500,
        topside_design=1.0500,
        drillfloor_efficiency=2.0000,
        dual_derrick=0.0000,
        tripsaver=1.0000,
        offline_standbuilding=2.0000,
        auto_pipe_handling=3.0000,
        dual_activity=2.0000,
        drilltronic=0.0000,
        dynamic_drilling_guide=0.0000,
        process_automation_platform=0.0000,
        automatic_tripping=0.0000,
    )


@pytest.mark.django_db
def test_calculate_custom_semi_topside_efficiency_score(concept_cs60):
    assert calculate_custom_semi_topside_efficiency_score(concept_cs60) == 1


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=7366,
                hull_breadth_ft=267.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=384.0000,
                total_cranes=2,
                crane_capacity_1_tons=108,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=29.04985689510489,
                topside_design=1.0500,
                variable_deckload=7.3660,
                size=8.612352,
                decksize=5.12640,
                total_cranes=1.8181818181818181,
                crane_capacity=2.076923076923077,
                auto_pipe_handling=3.0000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=6600,
                hull_breadth_ft=235.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=312.0000,
                total_cranes=3,
                crane_capacity_1_tons=92,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=24.971383496503496,
                topside_design=1.0500,
                variable_deckload=6.6000,
                size=6.15888,
                decksize=3.66600,
                total_cranes=2.727272727272727,
                crane_capacity=1.7692307692307692,
                auto_pipe_handling=3.0000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=4387,
                hull_breadth_ft=215.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=322.0000,
                total_cranes=2,
                crane_capacity_1_tons=105,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=19.889712587412586,
                topside_design=1.0500,
                variable_deckload=4.3870,
                size=4.1538,
                decksize=3.46150,
                total_cranes=1.8181818181818181,
                crane_capacity=2.019230769230769,
                auto_pipe_handling=3.0000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=7920,
                hull_breadth_ft=280.0000,
                hull_depth_ft=140.0000,
                hull_length_ft=332.0000,
                total_cranes=2,
                crane_capacity_1_tons=92,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=26.712612587412586,
                topside_design=1.0500,
                variable_deckload=7.9200,
                size=6.5072,
                decksize=4.64800,
                total_cranes=1.8181818181818181,
                crane_capacity=1.7692307692307692,
                auto_pipe_handling=3.0000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=5015,
                hull_breadth_ft=236.0000,
                hull_depth_ft=123.0000,
                hull_length_ft=346.0000,
                total_cranes=2,
                crane_capacity_1_tons=88,
                auto_pipe_handling=False,
            ),
            SemiDeckEfficiencyResult(
                points=18.680133510489508,
                topside_design=1.0500,
                variable_deckload=5.0150,
                size=5.021844,
                decksize=4.08280,
                total_cranes=1.8181818181818181,
                crane_capacity=1.6923076923076923,
                auto_pipe_handling=0.0000,
            ),
        ),
        (
            'Concept H6',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=6944,
                hull_breadth_ft=253.0000,
                hull_depth_ft=150.0000,
                hull_length_ft=394.0000,
                total_cranes=2,
                crane_capacity_1_tons=94,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=27.080124125874125,
                topside_design=1.0500,
                variable_deckload=6.9440,
                size=7.47615,
                decksize=4.98410,
                total_cranes=1.8181818181818181,
                crane_capacity=1.8076923076923077,
                auto_pipe_handling=3.0000,
            ),
        ),
        (
            'Concept H4',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=5950,
                hull_breadth_ft=220.0000,
                hull_depth_ft=131.0000,
                hull_length_ft=253.0000,
                total_cranes=2,
                crane_capacity_1_tons=94,
                auto_pipe_handling=False,
            ),
            SemiDeckEfficiencyResult(
                points=17.054604125874125,
                topside_design=1.0500,
                variable_deckload=5.9500,
                size=3.64573,
                decksize=2.78300,
                total_cranes=1.8181818181818181,
                crane_capacity=1.8076923076923077,
                auto_pipe_handling=0.0000,
            ),
        ),
        (
            'Concept H3',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=3448,
                hull_breadth_ft=221.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=355.0000,
                total_cranes=2,
                crane_capacity_1_tons=45,
                auto_pipe_handling=False,
            ),
            SemiDeckEfficiencyResult(
                points=15.811616433566435,
                topside_design=1.0500,
                variable_deckload=3.4480,
                size=4.7073,
                decksize=3.92275,
                total_cranes=1.8181818181818181,
                crane_capacity=0.8653846153846154,
                auto_pipe_handling=0.0000,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                topside_design=TopsideDesign.NOV,
                variable_load_tons=4408,
                hull_breadth_ft=318.0000,
                hull_depth_ft=130.0000,
                hull_length_ft=381.0000,
                total_cranes=2,
                crane_capacity_1_tons=83,
                auto_pipe_handling=True,
            ),
            SemiDeckEfficiencyResult(
                points=25.805505664335666,
                topside_design=1.0500,
                variable_deckload=4.4080,
                size=7.87527,
                decksize=6.05790,
                total_cranes=1.8181818181818181,
                crane_capacity=1.5961538461538463,
                auto_pipe_handling=3.0000,
            ),
        ),
    ),
)
def test_calculate_semi_deck_efficiency(name, input, output):
    result = calculate_semi_deck_efficiency(**input)

    assert result == output


@pytest.mark.django_db
def test_calculate_reference_semi_deck_efficiency():
    assert calculate_reference_semi_deck_efficiency()['points'] == 29.04985689510489


@pytest.mark.django_db
def test_calculate_custom_semi_deck_efficiency(concept_cs60):
    assert calculate_custom_semi_deck_efficiency(concept_cs60) == SemiDeckEfficiencyResult(
        points=29.04985689510489,
        topside_design=1.0500,
        variable_deckload=7.3660,
        size=8.612352,
        decksize=5.12640,
        total_cranes=1.8181818181818181,
        crane_capacity=2.076923076923077,
        auto_pipe_handling=3.0000,
    )


@pytest.mark.django_db
def test_calculate_custom_semi_deck_efficiency_score(concept_cs60):
    assert calculate_custom_semi_deck_efficiency_score(concept_cs60) == 1


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                hull_concept=9.0000,
                airgap=Airgap.M,
                displacement=74045.2857142857,
                hull_breadth_ft=267.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=384.0000,
                active_heave_drawwork=True,
                cmc_with_active_heave=True,
                ram_system=False,
                engine_total_hp=51450.0000,
                engine_qty_1=7,
                generator_qty_1=7,
                generator_total_hp=38500.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=31.814395141736696,
                hull_concept=9.0000,
                airgap=3.0000,
                displacement=0.8711210084033612,
                vessel_size=3.4449408,
                active_heave_drawwork=6.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=0.0000,
                engine_qty=1.7500,
                engines_total_hp=1.7150,
                generator_qty=1.7500,
                generator_total_hp=1.2833333333333334,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                hull_concept=8.0000,
                airgap=Airgap.M,
                displacement=59020.6666666667,
                hull_breadth_ft=235.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=312.0000,
                active_heave_drawwork=False,
                cmc_with_active_heave=True,
                ram_system=True,
                engine_total_hp=50000.0000,
                engine_qty_1=8,
                generator_qty_1=8,
                generator_total_hp=34240.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=26.965912784313726,
                hull_concept=8.0000,
                airgap=3.0000,
                displacement=0.6943607843137259,
                vessel_size=2.463552,
                active_heave_drawwork=0.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=3.0000,
                engine_qty=2.0000,
                engines_total_hp=1.6666666666666667,
                generator_qty=2.0000,
                generator_total_hp=1.1413333333333333,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                hull_concept=6.0000,
                airgap=Airgap.S,
                displacement=36164.6000,
                hull_breadth_ft=215.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=322.0000,
                active_heave_drawwork=True,
                cmc_with_active_heave=True,
                ram_system=True,
                engine_total_hp=44450.0000,
                engine_qty_1=7,
                generator_qty_1=7,
                generator_total_hp=33068.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=27.170919215686272,
                hull_concept=6.0000,
                airgap=1.0000,
                displacement=0.42546588235294114,
                vessel_size=1.66152,
                active_heave_drawwork=6.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=3.0000,
                engine_qty=1.7500,
                engines_total_hp=1.4816666666666667,
                generator_qty=1.7500,
                generator_total_hp=1.1022666666666667,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                hull_concept=9.0000,
                airgap=Airgap.M,
                displacement=59847.6000,
                hull_breadth_ft=280.0000,
                hull_depth_ft=140.0000,
                hull_length_ft=332.0000,
                active_heave_drawwork=True,
                cmc_with_active_heave=True,
                ram_system=False,
                engine_total_hp=48160.0000,
                engine_qty_1=8,
                generator_qty_1=8,
                generator_total_hp=43200.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=31.35230274509804,
                hull_concept=9.0000,
                airgap=3.0000,
                displacement=0.7040894117647059,
                vessel_size=2.60288,
                active_heave_drawwork=6.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=0.0000,
                engine_qty=2.0000,
                engines_total_hp=1.6053333333333333,
                generator_qty=2.0000,
                generator_total_hp=1.4400,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                hull_concept=7.0000,
                airgap=Airgap.S,
                displacement=47625.5000,
                hull_breadth_ft=236.0000,
                hull_depth_ft=123.0000,
                hull_length_ft=346.0000,
                active_heave_drawwork=True,
                cmc_with_active_heave=False,
                ram_system=False,
                engine_total_hp=44538.0000,
                engine_qty_1=6,
                generator_qty_1=6,
                generator_total_hp=33210.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=22.1606376,
                hull_concept=7.0000,
                airgap=1.0000,
                displacement=0.5603,
                vessel_size=2.0087376,
                active_heave_drawwork=6.0000,
                crown_mounted_compensator_with_active_heave=0.0000,
                ram_system=0.0000,
                engine_qty=1.5000,
                engines_total_hp=1.4846,
                generator_qty=1.5000,
                generator_total_hp=1.1070,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept H6',
            dict(
                hull_concept=10.0000,
                airgap=Airgap.XL,
                displacement=71099.0000,
                hull_breadth_ft=253.0000,
                hull_depth_ft=150.0000,
                hull_length_ft=394.0000,
                active_heave_drawwork=False,
                cmc_with_active_heave=False,
                ram_system=True,
                engine_total_hp=56856.0000,
                engine_qty_1=8,
                generator_qty_1=8,
                generator_total_hp=42400.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=29.135452156862744,
                hull_concept=10.0000,
                airgap=5.0000,
                displacement=0.8364588235294118,
                vessel_size=2.99046,
                active_heave_drawwork=0.0000,
                crown_mounted_compensator_with_active_heave=0.0000,
                ram_system=3.0000,
                engine_qty=2.0000,
                engines_total_hp=1.8952,
                generator_qty=2.0000,
                generator_total_hp=1.4133333333333333,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept H4',
            dict(
                hull_concept=9.0000,
                airgap=Airgap.M,
                displacement=49008.0000,
                hull_breadth_ft=220.0000,
                hull_depth_ft=131.0000,
                hull_length_ft=253.0000,
                active_heave_drawwork=False,
                cmc_with_active_heave=True,
                ram_system=False,
                engine_total_hp=17760.0000,
                engine_qty_1=4,
                generator_qty_1=4,
                generator_total_hp=12400.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=20.040190039215688,
                hull_concept=9.0000,
                airgap=3.0000,
                displacement=0.576564705882353,
                vessel_size=1.458292,
                active_heave_drawwork=0.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=0.0000,
                engine_qty=1.0000,
                engines_total_hp=0.5920,
                generator_qty=1.0000,
                generator_total_hp=0.41333333333333333,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept H3',
            dict(
                hull_concept=8.0000,
                airgap=Airgap.XL,
                displacement=26053.5000,
                hull_breadth_ft=221.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=355.0000,
                active_heave_drawwork=False,
                cmc_with_active_heave=False,
                ram_system=True,
                engine_total_hp=14592.0000,
                engine_qty_1=4,
                generator_qty_1=4,
                generator_total_hp=10600.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=21.029165098039215,
                hull_concept=8.0000,
                airgap=5.0000,
                displacement=0.3065117647058824,
                vessel_size=1.88292,
                active_heave_drawwork=0.0000,
                crown_mounted_compensator_with_active_heave=0.0000,
                ram_system=3.0000,
                engine_qty=1.0000,
                engines_total_hp=0.4864,
                generator_qty=1.0000,
                generator_total_hp=0.35333333333333333,
                closed_bus=0.0000,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                hull_concept=9.0000,
                airgap=Airgap.M,
                displacement=59715.7500,
                hull_breadth_ft=318.0000,
                hull_depth_ft=130.0000,
                hull_length_ft=381.0000,
                active_heave_drawwork=False,
                cmc_with_active_heave=True,
                ram_system=False,
                engine_total_hp=45060.0000,
                engine_qty_1=6,
                generator_qty_1=6,
                generator_total_hp=33600.0000,
                closed_bus=False,
            ),
            SemiWoWResult(
                points=24.474646235294117,
                hull_concept=9.0000,
                airgap=3.0000,
                displacement=0.7025382352941176,
                vessel_size=3.150108,
                active_heave_drawwork=0.0000,
                crown_mounted_compensator_with_active_heave=3.0000,
                ram_system=0.0000,
                engine_qty=1.5000,
                engines_total_hp=1.5020,
                generator_qty=1.5000,
                generator_total_hp=1.1200,
                closed_bus=0.0000,
            ),
        ),
    ),
)
def test_calculate_semi_wow(name, input, output):
    result = calculate_semi_wow(**input)

    assert result == output


@pytest.mark.django_db
def test_calculate_reference_semi_wow():
    assert calculate_reference_semi_wow()['points'] == 31.814395141736696


@pytest.mark.django_db
def test_calculate_custom_semi_wow(concept_cs60):
    assert calculate_custom_semi_wow(concept_cs60) == SemiWoWResult(
        points=31.814395141736696,
        hull_concept=9.0000,
        airgap=3.0000,
        displacement=0.8711210084033612,
        vessel_size=3.4449408,
        active_heave_drawwork=6.0000,
        crown_mounted_compensator_with_active_heave=3.0000,
        ram_system=0.0000,
        engine_qty=1.7500,
        engines_total_hp=1.7150,
        generator_qty=1.7500,
        generator_total_hp=1.2833333333333334,
        closed_bus=0.0000,
    )


@pytest.mark.django_db
def test_calculate_custom_semi_wow_score(concept_cs60):
    assert calculate_custom_semi_wow_score(concept_cs60) == 1


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                quarters_capacity=160.0000,
                rig_water_depth_ft=10000.0000,
                variable_load_tons=7366.0000,
                hull_breadth_ft=267.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=384.0000,
                derrick_height_ft=212.0000,
                derrick_capacity_lbs=2272750,
                dual_derrick=False,
                drawworks_hp=7460,
                total_bop_rams=6,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=4,
                liquid_mud_bbl=16619.0000,
                engine_qty_1=7.0000,
                engine_total_hp=51450.0000,
                generator_qty_1=7,
                generator_total_hp=38500.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=51.959801999999996,
                quarters_capacity=3.2000,
                water_depth=4.0000,
                variable_load_t=2.9464,
                size=8.612352,
                derrick_height=4.2400,
                derrick_capacity_lbs=2.27275,
                dual_derrick=0.0000,
                drawworks_hp_hp=1.4920,
                total_bop_rams=3.0000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=3.0000,
                liquid_mud_bbl=3.3238,
                engine_quantity=3.5000,
                engines_capacity=2.5725,
                number_of_generators=3.5000,
                generator_capacity=1.9250,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                quarters_capacity=132.0000,
                rig_water_depth_ft=10000.0000,
                variable_load_tons=6600.0000,
                hull_breadth_ft=235.0000,
                hull_depth_ft=168.0000,
                hull_length_ft=312.0000,
                derrick_height_ft=190.0000,
                derrick_capacity_lbs=2000000,
                dual_derrick=False,
                drawworks_hp=4600,
                total_bop_rams=5,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=4,
                liquid_mud_bbl=9016.0000,
                engine_qty_1=8.0000,
                engine_total_hp=50000.0000,
                generator_qty_1=8,
                generator_total_hp=34240.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=46.049080000000004,
                quarters_capacity=2.6400,
                water_depth=4.0000,
                variable_load_t=2.6400,
                size=6.15888,
                derrick_height=3.8000,
                derrick_capacity_lbs=2.0000,
                dual_derrick=0.0000,
                drawworks_hp_hp=0.9200,
                total_bop_rams=2.5000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=3.0000,
                liquid_mud_bbl=1.8032,
                engine_quantity=4.0000,
                engines_capacity=2.5000,
                number_of_generators=4.0000,
                generator_capacity=1.7120,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                quarters_capacity=124.0000,
                rig_water_depth_ft=1640.0000,
                variable_load_tons=4387.0000,
                hull_breadth_ft=215.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=322.0000,
                derrick_height_ft=144.0000,
                derrick_capacity_lbs=1340120,
                dual_derrick=False,
                drawworks_hp=4600,
                total_bop_rams=5,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=3,
                liquid_mud_bbl=5442.8000,
                engine_qty_1=7.0000,
                engine_total_hp=44450.0000,
                generator_qty_1=7,
                generator_total_hp=33068.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=35.27418,
                quarters_capacity=2.4800,
                water_depth=0.6560,
                variable_load_t=1.7548,
                size=4.1538,
                derrick_height=2.8800,
                derrick_capacity_lbs=1.34012,
                dual_derrick=0.0000,
                drawworks_hp_hp=0.9200,
                total_bop_rams=2.5000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=2.2500,
                liquid_mud_bbl=1.08856,
                engine_quantity=3.5000,
                engines_capacity=2.2225,
                number_of_generators=3.5000,
                generator_capacity=1.6534,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                quarters_capacity=172.0000,
                rig_water_depth_ft=10000.0000,
                variable_load_tons=7920.0000,
                hull_breadth_ft=280.0000,
                hull_depth_ft=140.0000,
                hull_length_ft=332.0000,
                derrick_height_ft=206.0000,
                derrick_capacity_lbs=2000000,
                dual_derrick=False,
                drawworks_hp=6080,
                total_bop_rams=6,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=4,
                liquid_mud_bbl=13478.4000,
                engine_qty_1=8.0000,
                engine_total_hp=48160.0000,
                generator_qty_1=8,
                generator_total_hp=43200.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=50.08988000000001,
                quarters_capacity=3.4400,
                water_depth=4.0000,
                variable_load_t=3.1680,
                size=6.5072,
                derrick_height=4.1200,
                derrick_capacity_lbs=2.0000,
                dual_derrick=0.0000,
                drawworks_hp_hp=1.2160,
                total_bop_rams=3.0000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=3.0000,
                liquid_mud_bbl=2.69568,
                engine_quantity=4.0000,
                engines_capacity=2.4080,
                number_of_generators=4.0000,
                generator_capacity=2.1600,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                quarters_capacity=130.0000,
                rig_water_depth_ft=1650.0000,
                variable_load_tons=5015.0000,
                hull_breadth_ft=236.0000,
                hull_depth_ft=123.0000,
                hull_length_ft=346.0000,
                derrick_height_ft=184.0000,
                derrick_capacity_lbs=1500000,
                dual_derrick=False,
                drawworks_hp=5175,
                total_bop_rams=5,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=3,
                liquid_mud_bbl=9900.0000,
                engine_qty_1=6.0000,
                engine_total_hp=44538.0000,
                generator_qty_1=6,
                generator_total_hp=33210.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=37.495244,
                quarters_capacity=2.6000,
                water_depth=0.6600,
                variable_load_t=2.0060,
                size=5.021844,
                derrick_height=3.6800,
                derrick_capacity_lbs=1.5000,
                dual_derrick=0.0000,
                drawworks_hp_hp=1.0350,
                total_bop_rams=2.5000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=2.2500,
                liquid_mud_bbl=1.9800,
                engine_quantity=3.0000,
                engines_capacity=2.2269,
                number_of_generators=3.0000,
                generator_capacity=1.6605,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept H6',
            dict(
                quarters_capacity=140.0000,
                rig_water_depth_ft=6500.0000,
                variable_load_tons=6944.0000,
                hull_breadth_ft=253.0000,
                hull_depth_ft=150.0000,
                hull_length_ft=394.0000,
                derrick_height_ft=160.0000,
                derrick_capacity_lbs=2000000,
                dual_derrick=True,
                drawworks_hp=5000,
                total_bop_rams=5,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=4,
                liquid_mud_bbl=21915.0000,
                engine_qty_1=8.0000,
                engine_total_hp=56856.0000,
                generator_qty_1=8,
                generator_total_hp=42400.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=51.074549999999995,
                quarters_capacity=2.8000,
                water_depth=2.6000,
                variable_load_t=2.7776,
                size=7.47615,
                derrick_height=3.2000,
                derrick_capacity_lbs=2.0000,
                dual_derrick=2.0000,
                drawworks_hp_hp=1.0000,
                total_bop_rams=2.5000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=3.0000,
                liquid_mud_bbl=4.3830,
                engine_quantity=4.0000,
                engines_capacity=2.8428,
                number_of_generators=4.0000,
                generator_capacity=2.1200,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept H4',
            dict(
                quarters_capacity=110.0000,
                rig_water_depth_ft=4500.0000,
                variable_load_tons=5950.0000,
                hull_breadth_ft=220.0000,
                hull_depth_ft=131.0000,
                hull_length_ft=253.0000,
                derrick_height_ft=170.0000,
                derrick_capacity_lbs=1500000,
                dual_derrick=False,
                drawworks_hp=3000,
                total_bop_rams=4,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=15000,
                number_of_bop_stacks=1,
                mudpump_qty=3,
                liquid_mud_bbl=22415.0000,
                engine_qty_1=4.0000,
                engine_total_hp=17760.0000,
                generator_qty_1=4,
                generator_total_hp=12400.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=34.14173,
                quarters_capacity=2.2000,
                water_depth=1.8000,
                variable_load_t=2.3800,
                size=3.64573,
                derrick_height=3.4000,
                derrick_capacity_lbs=1.5000,
                dual_derrick=0.0000,
                drawworks_hp_hp=0.6000,
                total_bop_rams=2.0000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.5000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=2.2500,
                liquid_mud_bbl=4.4830,
                engine_quantity=2.0000,
                engines_capacity=0.8880,
                number_of_generators=2.0000,
                generator_capacity=0.6200,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept H3',
            dict(
                quarters_capacity=100.0000,
                rig_water_depth_ft=1500.0000,
                variable_load_tons=3448.0000,
                hull_breadth_ft=221.0000,
                hull_depth_ft=120.0000,
                hull_length_ft=355.0000,
                derrick_height_ft=184.0000,
                derrick_capacity_lbs=1102425,
                dual_derrick=False,
                drawworks_hp=3000,
                total_bop_rams=4,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=12500,
                number_of_bop_stacks=1,
                mudpump_qty=3,
                liquid_mud_bbl=4054.5000,
                engine_qty_1=4.0000,
                engine_total_hp=14592.0000,
                generator_qty_1=4,
                generator_total_hp=10600.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=28.514425000000003,
                quarters_capacity=2.0000,
                water_depth=0.6000,
                variable_load_t=1.3792,
                size=4.7073,
                derrick_height=3.6800,
                derrick_capacity_lbs=1.102425,
                dual_derrick=0.0000,
                drawworks_hp_hp=0.6000,
                total_bop_rams=2.0000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.2500,
                number_of_bop_stacks=1.0000,
                mudpump_qty=2.2500,
                liquid_mud_bbl=0.8109,
                engine_quantity=2.0000,
                engines_capacity=0.7296,
                number_of_generators=2.0000,
                generator_capacity=0.5300,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                quarters_capacity=130.0000,
                rig_water_depth_ft=3700.0000,
                variable_load_tons=4408.0000,
                hull_breadth_ft=318.0000,
                hull_depth_ft=130.0000,
                hull_length_ft=381.0000,
                derrick_height_ft=170.0000,
                derrick_capacity_lbs=1500000,
                dual_derrick=False,
                drawworks_hp=3000,
                total_bop_rams=5,
                bop_diameter_wp_max_in=18.7500,
                bop_wp_max_psi=10000,
                number_of_bop_stacks=1,
                mudpump_qty=3,
                liquid_mud_bbl=23096.0000,
                engine_qty_1=6.0000,
                engine_total_hp=45060.0000,
                generator_qty_1=6,
                generator_total_hp=33600.0000,
                closed_bus=False,
                hybrid=False,
            ),
            SemiCapacitiesResult(
                points=42.39567,
                quarters_capacity=2.6000,
                water_depth=1.4800,
                variable_load_t=1.7632,
                size=7.87527,
                derrick_height=3.4000,
                derrick_capacity_lbs=1.5000,
                dual_derrick=0.0000,
                drawworks_hp_hp=0.6000,
                total_bop_rams=2.5000,
                bop_diameter_working_pressure_max_in=1.8750,
                bop_wp_max=1.0000,
                number_of_bop_stacks=1.0000,
                mudpump_qty=2.2500,
                liquid_mud_bbl=4.6192,
                engine_quantity=3.0000,
                engines_capacity=2.2530,
                number_of_generators=3.0000,
                generator_capacity=1.6800,
                closed_bus=0.0000,
                hybrid=0.0000,
            ),
        ),
    ),
)
def test_calculate_semi_capacities(name, input, output):
    result = calculate_semi_capacities(**input)

    assert result == output


@pytest.mark.django_db
def test_calculate_reference_semi_capacities():
    assert calculate_reference_semi_capacities()['points'] == 51.959801999999996


@pytest.mark.django_db
def test_calculate_custom_semi_capacities(concept_cs60):
    assert calculate_custom_semi_capacities(concept_cs60) == SemiCapacitiesResult(
        points=51.959801999999996,
        quarters_capacity=3.2000,
        water_depth=4.0000,
        variable_load_t=2.9464,
        size=8.612352,
        derrick_height=4.2400,
        derrick_capacity_lbs=2.27275,
        dual_derrick=0.0000,
        drawworks_hp_hp=1.4920,
        total_bop_rams=3.0000,
        bop_diameter_working_pressure_max_in=1.8750,
        bop_wp_max=1.5000,
        number_of_bop_stacks=1.0000,
        mudpump_qty=3.0000,
        liquid_mud_bbl=3.3238,
        engine_quantity=3.5000,
        engines_capacity=2.5725,
        number_of_generators=3.5000,
        generator_capacity=1.9250,
        closed_bus=0.0000,
        hybrid=0.0000,
    )


@pytest.mark.django_db
def test_calculate_custom_semi_capacities_score(concept_cs60):
    assert calculate_custom_semi_capacities_score(concept_cs60) == 1


@pytest.mark.django_db
def test_calculate_reference_semi_rig_status():
    assert calculate_reference_semi_rig_status()['points'] == 25.0


@pytest.mark.django_db
def test_calculate_custom_rig_status_score(concept_cs60):
    assert calculate_custom_semi_rig_status_score(concept_cs60) == 1


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                co2_score=1.0000,
                fuel_td_positioning=51.3000,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=100.0000,
                fuel_td_positioning=51.3000,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=19.769444444444446,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept CS50',
            dict(
                co2_score=0.82682702,
                fuel_td_positioning=42.4162,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=82.68270199999999,
                fuel_td_positioning=42.4162,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=16.345904305555557,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                co2_score=0.73144652,
                fuel_td_positioning=37.5232,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=73.144652,
                fuel_td_positioning=37.5232,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=14.460289722222223,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                co2_score=0.90374177,
                fuel_td_positioning=46.3620,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=90.374177,
                fuel_td_positioning=46.3620,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=17.86648451388889,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                co2_score=0.81663927,
                fuel_td_positioning=41.8936,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=81.663927,
                fuel_td_positioning=41.8936,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=16.144506041666666,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept H6',
            dict(
                co2_score=0.92559240,
                fuel_td_positioning=47.4829,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=92.55924,
                fuel_td_positioning=47.4829,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=18.298450000000003,
                total_move_time=0.3194444444444444,
            ),
        ),
        (
            'Concept H4',
            dict(
                co2_score=0.70712511,
                fuel_td_positioning=28.2850,
                number_of_tugs=1,
                tugs_fuel_td=20.0000,
                move_distance_nm=10,
                move_speed_kn=3.0000,
                positioning_time=0.2500,
                dp=False,
            ),
            SemiTransitResult(
                fuel_td_transit=70.712511,
                fuel_td_positioning=28.2850,
                number_of_tugs=1.0000,
                tugs_fuel_td=20.0000,
                move_distance_nm=10.0000,
                move_speed_kn=3.0000,
                move_time_d=0.1388888888888889,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=3.0000,
                total_fuel=101.74743208333334,
                total_move_time=3.388888888888889,
            ),
        ),
        (
            'Concept H3',
            dict(
                co2_score=0.64129312,
                fuel_td_positioning=25.65172463,
                number_of_tugs=2,
                tugs_fuel_td=20.0000,
                move_distance_nm=10,
                move_speed_kn=3.0000,
                positioning_time=0.2500,
                dp=False,
            ),
            SemiTransitResult(
                fuel_td_transit=64.129312,
                fuel_td_positioning=25.65172463,
                number_of_tugs=2.0000,
                tugs_fuel_td=20.0000,
                move_distance_nm=10.0000,
                move_speed_kn=3.0000,
                move_time_d=0.1388888888888889,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=3.0000,
                total_fuel=92.27495393638888,
                total_move_time=3.388888888888889,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                co2_score=0.82301784,
                fuel_td_positioning=42.2208,
                number_of_tugs=0,
                tugs_fuel_td=0,
                move_distance_nm=10,
                move_speed_kn=6.0000,
                positioning_time=0.2500,
                dp=True,
            ),
            SemiTransitResult(
                fuel_td_transit=82.301784,
                fuel_td_positioning=42.2208,
                number_of_tugs=0.0000,
                tugs_fuel_td=0.0000,
                move_distance_nm=10.0000,
                move_speed_kn=6.0000,
                move_time_d=0.06944444444444445,
                positioning_time=0.2500,
                lack_of_dp_for_drilling_while_installing=0.0000,
                total_fuel=16.270601666666664,
                total_move_time=0.3194444444444444,
            ),
        ),
    ),
)
def test_calculate_semi_transit(name, input, output):
    assert calculate_semi_transit(**input) == output


@pytest.mark.django_db
class TestCalculateCustomSemiTransit:
    @pytest.fixture
    def plan_well(self):
        project = ProjectFactory(tugs_avg_move_fuel_consumption=20, tugs_move_speed=3.0000)
        return PlanWellRelationFactory(
            plan__project=project,
            distance_from_previous_location=10,
            semi_positioning_time=0.2500,
        )

    def test_calculate_custom_semi_transit_with_dp(self, concept_cs60, plan_well):
        assert calculate_custom_semi_transit(rig=concept_cs60, plan_well=plan_well) == SemiTransitResult(
            fuel_td_transit=100.0000,
            fuel_td_positioning=51.3000,
            number_of_tugs=0,
            tugs_fuel_td=0,
            move_distance_nm=10,
            move_speed_kn=6.0000,
            move_time_d=0.06944444444444445,
            positioning_time=0.2500,
            lack_of_dp_for_drilling_while_installing=0.0000,
            total_fuel=19.769444444444446,
            total_move_time=0.3194444444444444,
        )

    def test_calculate_custom_semi_transit_without_dp(self, concept_h3, plan_well):
        assert calculate_custom_semi_transit(rig=concept_h3, plan_well=plan_well) == SemiTransitResult(
            fuel_td_transit=64.12931156252195,
            fuel_td_positioning=25.651724625008782,
            number_of_tugs=2.0000,
            tugs_fuel_td=20.0000,
            move_distance_nm=10.0000,
            move_speed_kn=3.0000,
            move_time_d=0.1388888888888889,
            positioning_time=0.2500,
            lack_of_dp_for_drilling_while_installing=3.0000,
            total_fuel=92.2749538594066,
            total_move_time=3.388888888888889,
        )


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                dp=True,
                co2_score=1.0000,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=51.3000,
                co2=162.62099999999998,
                fuel_winter=55.9170,
                fuel_summer=47.1960,
            ),
        ),
        (
            'Concept CS50',
            dict(
                dp=True,
                co2_score=0.8268270,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=42.4162251,
                co2=134.459433567,
                fuel_winter=46.233685359,
                fuel_summer=39.022927092,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                dp=True,
                co2_score=0.7314465,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=37.52320545,
                co2=118.94856127649999,
                fuel_winter=40.9002939405,
                fuel_summer=34.521349014,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                dp=True,
                co2_score=0.9037418,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=46.36195434,
                co2=146.96739525779998,
                fuel_winter=50.5345302306,
                fuel_summer=42.652997992799996,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                dp=True,
                co2_score=0.8166393,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=41.893596089999996,
                co2=132.80269960529998,
                fuel_winter=45.664019738099995,
                fuel_summer=38.5421084028,
            ),
        ),
        (
            'Concept H6',
            dict(
                dp=True,
                co2_score=0.9255924,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=47.48289011999999,
                co2=150.52076168039997,
                fuel_winter=51.756350230799995,
                fuel_summer=43.6842589104,
            ),
        ),
        (
            'Concept H4',
            dict(
                dp=False,
                co2_score=0.7071251,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=28.285003999999997,
                co2=89.66346268,
                fuel_winter=30.689229339999997,
                fuel_summer=25.880778659999997,
            ),
        ),
        (
            'Concept H3',
            dict(
                dp=False,
                co2_score=0.6412931,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=25.651723999999998,
                co2=81.31596508,
                fuel_winter=27.83212054,
                fuel_summer=23.471327459999998,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                dp=True,
                co2_score=0.8230178,
                co2_emission_per_tonne_fuel=3.17,
            ),
            SemiCO2PerWell(
                fuel=42.22081314,
                co2=133.8399776538,
                fuel_winter=46.0206863226,
                fuel_summer=38.8431480888,
            ),
        ),
    ),
)
def test_calculate_semi_common_co2_per_well(name, input, output):
    assert calculate_semi_common_co2_per_well(**input) == output


@pytest.mark.django_db
class TestCalculateCustomSemiCommonCO2PerWell:
    @pytest.fixture
    def project(self):
        return ProjectFactory(co2_emission_per_tonne_fuel=3.17)

    def test_calculate_custom_semi_co2_per_well_with_dp(self, concept_cs60, project):
        concept_cs60.project = project
        concept_cs60.save()
        assert calculate_custom_semi_common_co2_per_well(rig=concept_cs60) == SemiCO2PerWell(
            fuel=51.3000,
            co2=162.62099999999998,
            fuel_winter=55.9170,
            fuel_summer=47.1960,
        )

    def test_calculate_custom_semi_co2_per_well_without_dp(self, concept_h3, project):
        concept_h3.project = project
        concept_h3.save()
        assert calculate_custom_semi_common_co2_per_well(rig=concept_h3) == SemiCO2PerWell(
            fuel=25.651724625008782,
            co2=81.31596706127783,
            fuel_winter=27.832121218134528,
            fuel_summer=23.471328031883036,
        )


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=1.000000,
            ),
            0.0120000,
        ),
        (
            'Concept CS50',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.847601,
            ),
            0.013828787999999998,
        ),
        (
            'Concept GM4000',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.854045,
            ),
            0.013751459999999998,
        ),
        (
            'Concept GM7500',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.985475,
            ),
            0.012174299999999997,
        ),
        (
            'Concept GM4D',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.696560,
            ),
            0.01564128,
        ),
        (
            'Concept H6',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.915795,
            ),
            0.013010459999999996,
        ),
        (
            'Concept H4',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.629910,
            ),
            0.01644108,
        ),
        (
            'Concept H3',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.660995,
            ),
            0.01606806,
        ),
        (
            'Concept GVA4000',
            dict(
                metocean_days_above_hs_5=2.4,
                wow_score=0.769295,
            ),
            0.014768459999999999,
        ),
    ),
)
def test_calculate_semi_metocean_factor(name, input, output):
    assert calculate_semi_metocean_factor(**input) == output


@pytest.mark.django_db
class TestCalculateCustomSemiMetoceanFactor:
    @pytest.fixture
    def well(self):
        return CustomWellFactory(metocean_days_above_hs_5=2.4)

    def test_calculate_custom_semi_metocean_factor_with_dp(self, concept_cs60, well):
        assert calculate_custom_semi_metocean_factor(rig=concept_cs60, well=well) == 0.0120000

    @pytest.mark.django_db
    def test_calculate_custom_semi_metocean_factor_without_dp(self, concept_h3, well):
        assert calculate_custom_semi_metocean_factor(rig=concept_h3, well=well) == 0.016068056612353526


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                operational_days=45.540000,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=51.30000000,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=1.00000000,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0400,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=19.76944444,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=45.540000,
                transit_time=0.31944444,
                total_days=45.85944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=51.30000000,
                rig_total_co2=7405.760339999999,
                rig_total_fuel=2336.2019999999998,
                psv_co2=302.43075230100095,
                psv_cost_usd=302180.9821076753,
                psv_fuel=95.40402280788673,
                psv_trips=9.827023808571429,
                helicopter_co2=29.60423679185823,
                helicopter_cost_usd=120937.90633816706,
                helicopter_fuel=9.368429364512098,
                helicopter_trips=10.220104760914285,
                logistic_cost=423118.8884458423,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=19.76944444,
                tugs=0,
                tugs_cost=0,
                total_fuel=2460.743896612398,
                total_fuel_cost=2756033.164205886,
                support_co2=332.0349890928592,
                total_co2=7800.4644679676585,
                total_cost=32045855.786664642,
                move_cost=229780.6637728,
                total_rig_and_spread_cost=29808638.886,
                transit_co2=62.6691388748,
            ),
        ),
        (
            'Concept CS50',
            dict(
                operational_days=48.861597412605,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=42.416226126,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.85960435,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0680,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=16.34591091,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=48.861597412605,
                transit_time=0.31944444,
                total_days=49.181041852605,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=42.416226126,
                rig_total_co2=6569.902870196097,
                rig_total_fuel=2072.52456473063,
                psv_co2=345.5856205755313,
                psv_cost_usd=345300.20982743445,
                psv_fuel=109.01754592288054,
                psv_trips=11.229275116558439,
                helicopter_co2=32.603236783376914,
                helicopter_cost_usd=133189.28720072648,
                helicopter_fuel=10.317479994739529,
                helicopter_trips=11.255432721124743,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=16.34591091,
                tugs=0,
                tugs_cost=0,
                total_fuel=2208.20550155825,
                total_fuel_cost=2473190.16174524,
                total_co2=6999.908265139706,
                total_cost=34054596.9674647,
                logistic_cost=478489.49702816096,
                move_cost=225946.3062192,
                total_rig_and_spread_cost=31967677.20419325,
                transit_co2=51.8165375847,
                support_co2=378.18885735890825,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                operational_days=52.742209341465,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=37.523206476,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.68467506,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0760,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=14.46029137,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=52.742209341465,
                transit_time=0.31944444,
                total_days=53.061653781465,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=37.523206476,
                psv_co2=401.4197831484543,
                psv_cost_usd=401088.26032520004,
                psv_fuel=126.63084641907076,
                psv_trips=13.043520661236622,
                helicopter_co2=35.43927214302882,
                helicopter_cost_usd=144774.93222541566,
                helicopter_fuel=11.21495953893317,
                helicopter_trips=12.234501314754931,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=14.46029137,
                tugs=0,
                tugs_cost=0,
                logistic_cost=545863.1925506156,
                move_cost=223834.4123344,
                total_rig_and_spread_cost=34490074.957952246,
                transit_co2=45.8391236429,
                support_co2=436.8590552914831,
                rig_total_co2=6273.6100912510565,
                rig_total_fuel=1979.0568111202072,
                total_co2=6756.308270185439,
                total_cost=36570946.31942032,
                total_fuel=2131.3629084482113,
                total_fuel_cost=2387126.4574619965,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                operational_days=47.0536561104,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=46.361952800999994,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.91954369,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0280,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=17.86647277,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=47.0536561104,
                transit_time=0.31944444,
                total_days=47.3731005504,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=46.361952800999994,
                psv_co2=324.1428508340064,
                psv_cost_usd=323875.1491472501,
                psv_fuel=102.25326524732064,
                psv_trips=10.532525175725842,
                helicopter_co2=30.228504758877737,
                helicopter_cost_usd=123488.13796400267,
                helicopter_fuel=9.565982518632195,
                helicopter_trips=10.435617292673827,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=17.86647277,
                tugs=0,
                tugs_cost=0,
                logistic_cost=447363.2871112528,
                move_cost=227649.3355024,
                total_rig_and_spread_cost=30792515.357759997,
                transit_co2=56.6367186809,
                support_co2=354.3713555928842,
                rig_total_co2=6915.353046344373,
                rig_total_fuel=2181.4993837048496,
                total_co2=7326.361120618158,
                total_cost=32933390.354356885,
                total_fuel=2311.1851042408025,
                total_fuel_cost=2588527.316749699,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                operational_days=54.754472144235,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=41.893594551,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.64303702,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0700,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=16.14450469,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=54.754472144235,
                transit_time=0.31944444,
                total_days=55.073916584235,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=41.893594551,
                psv_co2=423.70019479900435,
                psv_cost_usd=423350.2711263556,
                psv_fuel=133.65936744448086,
                psv_trips=13.767488492182638,
                helicopter_co2=36.578128470986705,
                helicopter_cost_usd=149427.33724742517,
                helicopter_fuel=11.575357111071742,
                helicopter_trips=12.627662302528169,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=16.14450469,
                tugs=0,
                tugs_cost=0,
                logistic_cost=572777.6083737807,
                move_cost=225720.7312528,
                total_rig_and_spread_cost=35798045.77975275,
                transit_co2=51.178079867300006,
                rig_total_co2=7271.541449090798,
                rig_total_fuel=2293.861655864605,
                support_co2=460.27832326999106,
                total_co2=7782.997852228089,
                total_cost=38149528.13175358,
                total_fuel=2455.2408851101573,
                total_fuel_cost=2749869.791323376,
            ),
        ),
        (
            'Concept H6',
            dict(
                operational_days=46.313785259625,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=47.48289011999999,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.93219475,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0600,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=18.29844758,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=46.313785259625,
                transit_time=0.31944444,
                total_days=46.633229699625,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=47.48289011999999,
                psv_co2=317.26477724696645,
                psv_cost_usd=317002.75599368615,
                psv_fuel=100.08352594541529,
                psv_trips=10.309032715442978,
                helicopter_co2=30.682666576481854,
                helicopter_cost_usd=125343.45954334106,
                helicopter_fuel=9.709704612810713,
                helicopter_trips=10.592405031771964,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=18.29844758,
                tugs=0,
                tugs_cost=0,
                logistic_cost=442346.2155370272,
                move_cost=228133.1472896,
                total_rig_and_spread_cost=30311599.30475625,
                transit_co2=58.0060788286,
                rig_total_co2=6971.186233581236,
                rig_total_fuel=2199.112376524049,
                support_co2=347.9474438234483,
                total_co2=7377.139756233284,
                total_cost=32461351.854853395,
                total_fuel=2327.2040546622748,
                total_fuel_cost=2606468.5412217476,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                operational_days=49.14331302228,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=42.220815191999996,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5000,
                deck_efficiency=0.88831782,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000.0000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5000,
                helicopter_factor=1.0700,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_fuel_cost_usd_t=2000.0000,
                helicopter_charter_price_usd=10000.0000,
                transit_fuel=16.27060549,
                marine_diesel_oil_price_usd_t=770,
                total_fuel_price=1120.00,
                helicopter_co2_emission_per_tonne_fuel=3.16,
            ),
            SemiCO2PerWellResult(
                operational_days=49.14331302228,
                transit_time=0.31944444,
                total_days=49.462757462279995,
                rig_day_rate_usd_d=300000,
                spread_cost=350000,
                rig_fuel_per_day=42.220815191999996,
                psv_co2=343.194310842574,
                psv_cost_usd=342910.8750189508,
                psv_fuel=108.26318954024417,
                psv_trips=11.151573171565584,
                helicopter_co2=32.85139698058875,
                helicopter_cost_usd=134203.06015823508,
                helicopter_fuel=10.396011702717958,
                helicopter_trips=11.341103675279914,
                ahv_fuel=0,
                ahv_cost=0,
                transit_fuel=16.27060549,
                tugs=0,
                tugs_cost=0,
                logistic_cost=477113.93517718586,
                move_cost=225861.9641488,
                total_rig_and_spread_cost=32150792.350482,
                transit_co2=51.577819403300005,
                rig_total_co2=6577.340236405041,
                rig_total_fuel=2074.8707370362904,
                support_co2=376.04570782316273,
                total_co2=7004.963763631504,
                total_cost=34238085.119404435,
                total_fuel=2209.8005437692527,
                total_fuel_cost=2474976.609021563,
            ),
        ),
    ),
)
def test_calculate_semi_dp_co2_per_well(name, input, output):
    assert calculate_semi_dp_co2_per_well(**input) == output


@pytest.mark.django_db
def test_calculate_custom_semi_dp_co2_per_well(concept_cs60):
    project = ProjectFactory(
        fuel_density=0.85,
        co2_emission_per_tonne_fuel=3.17,
        fuel_total_price=1120.0000,
        psv_calls_per_week=1.5,
        marine_diesel_oil_price=770,
        psv_day_rate=12000.0000,
        psv_speed=12,
        psv_avg_fuel_transit_consumption=12.0000,
        psv_avg_fuel_dp_consumption=5.5000,
        psv_loading_time=0.2500,
        psv_fuel_price=2000,
        helicopter_no_flights_per_week=1.5000,
        helicopter_rate_per_trip=10000.0000,
        helicopter_avg_fuel_consumption=12.0000,
        helicopter_fuel_price=2000,
        helicopter_cruise_speed=120.0000,
    )
    concept_cs60.project = project
    concept_cs60.save()
    plan = PlanFactory(
        project=project,
        reference_operation_jackup=None,
        reference_operation_semi=concept_cs60,
    )
    well = CustomWellFactory(metocean_days_above_hs_5=2.4)
    plan_well = PlanWellRelationFactory(
        plan=plan,
        well=well,
        distance_from_previous_location=10,
        distance_to_helicopter_base=110.0000,
        distance_to_psv_base=100.0000,
        semi_positioning_time=0.25,
        operational_time=45.540000,
    )
    assert calculate_custom_semi_dp_co2_per_well(
        rig=concept_cs60,
        plan=plan,
        plan_well=plan_well,
    ) == SemiCO2PerWellResult(
        operational_days=45.540000,
        transit_time=0.3194444444444444,
        total_days=45.85944444444444,
        rig_day_rate_usd_d=300000,
        spread_cost=350000,
        rig_fuel_per_day=51.30000000,
        rig_total_fuel=2336.2019999999998,
        rig_total_co2=7405.760339999999,
        psv_trips=9.827023809523808,
        psv_fuel=95.40402281746032,
        psv_co2=302.4307523313492,
        psv_cost_usd=302180.98214285716,
        helicopter_trips=10.22010476190476,
        helicopter_fuel=9.368429365079363,
        helicopter_co2=29.604236793650788,
        helicopter_cost_usd=120937.90634920633,
        ahv_fuel=0,
        ahv_cost=0,
        transit_fuel=19.769444444444446,
        tugs=0,
        tugs_cost=0,
        total_fuel=2460.743896626984,
        total_co2=7800.464468013887,
        total_cost=32045855.789603174,
        logistic_cost=423118.8884920635,
        move_cost=229780.66666666666,
        total_rig_and_spread_cost=29808638.888888888,
        total_fuel_cost=2756033.1642222223,
        transit_co2=62.66913888888889,
        support_co2=332.034989125,
    )


@pytest.mark.django_db
def test_calculate_ahv_fuel_consumption_per_location():
    assert (
        calculate_ahv_fuel_consumption_per_location(
            ahv_fuel_consumption_td=10,
            ahv_days_per_location=20,
        )
        == 200
    )


@pytest.mark.django_db
def test_calculate_custom_ahv_fuel_consumption_per_location():
    project = ProjectFactory(
        ahv_avg_fuel_consumption=10,
        ahv_no_days_per_location=20,
    )

    assert calculate_custom_ahv_fuel_consumption_per_location(project) == 200


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                operational_days=62.744,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=40.00000000,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=1.00000000,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0400,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=19.76944444,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=62.744,
                helicopter_co2=40.71015610654779,
                helicopter_cost_usd=166307.31205270835,
                helicopter_fuel=12.882960793211327,
                helicopter_trips=14.05413904662857,
                logistic_cost=581850.3655867431,
                move_cost=676808.4417727999,
                psv_co2=415.88652408632566,
                psv_cost_usd=415543.05353403476,
                psv_fuel=131.19448709347813,
                psv_trips=13.513595237142859,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=40.0,
                rig_total_co2=7955.939200000001,
                rig_total_fuel=2509.76,
                spread_cost=300000,
                support_co2=456.59668019287346,
                total_co2=9109.205019067675,
                total_cost=40830654.70180555,
                total_days=63.06344444,
                total_fuel=2873.6068923266894,
                total_fuel_cost=3218439.7194058923,
                total_rig_and_spread_cost=37838066.664,
                transit_co2=62.6691388748,
                transit_fuel=19.76944444,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept CS50',
            dict(
                operational_days=67.32042310181133,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=33.07308094,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.85960435,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0680,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=16.34591091,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=67.32042310181133,
                helicopter_co2=44.840014249212516,
                helicopter_cost_usd=183178.4241424773,
                helicopter_fuel=14.189877926965986,
                helicopter_trips=15.479866828854535,
                logistic_cost=658078.0922886943,
                move_cost=672974.0842192,
                psv_co2=475.2922003998878,
                psv_cost_usd=474899.668146217,
                psv_fuel=149.9344480756744,
                psv_trips=15.44389164733279,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=33.07308094,
                rig_total_co2=7057.985352851168,
                rig_total_fuel=2226.4938021612516,
                spread_cost=300000,
                support_co2=520.1322146491003,
                total_co2=8263.934105084967,
                total_cost=43431985.196440354,
                total_days=67.63986754181133,
                total_fuel=2606.964039073892,
                total_fuel_cost=2919799.723762759,
                total_rig_and_spread_cost=40583920.5250868,
                transit_co2=51.8165375847,
                transit_fuel=16.34591091,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept GM4000',
            dict(
                operational_days=72.66704398157401,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=29.25786086,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.68467506,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0760,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=14.46029137,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=72.66704398157401,
                helicopter_co2=48.74684148724565,
                helicopter_cost_usd=199138.42033878507,
                helicopter_fuel=15.426215660520775,
                helicopter_trips=16.828598901774352,
                logistic_cost=750836.7105733838,
                move_cost=670862.1903344,
                psv_co2=552.1543010253779,
                psv_cost_usd=551698.2902345988,
                psv_fuel=174.1811675158921,
                psv_trips=17.941407812857353,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=29.25786086,
                rig_total_co2=6739.680770287645,
                rig_total_fuel=2126.0822619203927,
                spread_cost=300000,
                support_co2=600.9011425126236,
                total_co2=8020.421036443168,
                total_cost=46653947.529551394,
                total_days=72.98648842157401,
                total_fuel=2530.1499364668057,
                total_fuel_cost=2833767.9288428226,
                total_rig_and_spread_cost=43791893.05294441,
                transit_co2=45.8391236429,
                transit_fuel=14.46029137,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept GM7500',
            dict(
                operational_days=64.82948175210667,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=36.14967092,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.91954369,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0280,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=17.86647277,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=64.82948175210667,
                helicopter_co2=41.5711575251167,
                helicopter_cost_usd=169824.63660486683,
                helicopter_fuel=13.15542959655592,
                helicopter_trips=14.351377741175499,
                logistic_cost=615227.5750256577,
                move_cost=674677.1135024,
                psv_co2=445.7710899082248,
                psv_cost_usd=445402.93842079083,
                psv_fuel=140.62179492373022,
                psv_trips=14.484648404210786,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=36.14967092,
                rig_total_co2=7429.099247071379,
                rig_total_fuel=2343.564431252801,
                spread_cost=300000,
                support_co2=487.34224743334147,
                total_co2=8607.078213185621,
                total_cost=41985885.08638721,
                total_days=65.14892619210667,
                total_fuel=2715.2081285430877,
                total_fuel_cost=3041033.103968258,
                total_rig_and_spread_cost=39089355.715264,
                transit_co2=56.6367186809,
                transit_fuel=17.86647277,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept GM4D',
            dict(
                operational_days=75.43949495427934,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=32.66557082,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.64303702,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0700,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=16.14450469,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=75.43949495427934,
                helicopter_co2=50.31638187110309,
                helicopter_cost_usd=205550.23663627953,
                helicopter_fuel=15.92290565541237,
                helicopter_trips=17.37044253254548,
                logistic_cost=787905.1792661293,
                move_cost=672748.5092528,
                psv_co2=582.8362929305546,
                psv_cost_usd=582354.9426298498,
                psv_fuel=183.86002931563237,
                psv_trips=18.938372118413422,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=32.66557082,
                rig_total_co2=7811.74910322132,
                rig_total_fuel=2464.2741650540443,
                spread_cost=300000,
                support_co2=633.1526748016577,
                total_co2=9130.07985789028,
                total_cost=48616191.19153664,
                total_days=75.75893939427934,
                total_fuel=2880.2016047150887,
                total_fuel_cost=3225825.7972808992,
                total_rig_and_spread_cost=45455363.6365676,
                transit_co2=51.178079867300006,
                transit_fuel=16.14450469,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept H6',
            dict(
                operational_days=63.810104135483336,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=37.02369610,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.93219475,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0600,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=18.29844758,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=63.810104135483336,
                helicopter_co2=42.19449455497772,
                helicopter_cost_usd=172371.06520778814,
                helicopter_fuel=13.352688150309406,
                helicopter_trips=14.566568890716932,
                logistic_cost=608310.0677174657,
                move_cost=675160.9252896,
                psv_co2=436.2993315025069,
                psv_cost_usd=435939.00250967755,
                psv_fuel=137.63385851814098,
                psv_trips=14.17687813067264,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=37.0236961,
                rig_total_co2=7489.080314480118,
                rig_total_fuel=2362.4859036214884,
                spread_cost=300000,
                support_co2=478.4938260574846,
                total_co2=8659.580219366202,
                total_cost=41382243.16343261,
                total_days=64.12954857548334,
                total_fuel=2731.770897869939,
                total_fuel_cost=3059583.4056143314,
                total_rig_and_spread_cost=38477729.14529,
                transit_co2=58.0060788286,
                transit_fuel=18.29844758,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept H4',
            dict(
                operational_days=81.287955056228,
                transit_time=3.38888889,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=28.28500456,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.58708049,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0900,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=101.74744696,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=81.287955056228,
                helicopter_co2=57.29053811230232,
                helicopter_cost_usd=234040.7483226966,
                helicopter_fuel=18.129917124146303,
                helicopter_trips=19.7780914074404,
                logistic_cost=899517.1832555581,
                move_cost=2610290.4745952,
                psv_co2=666.0264899914147,
                psv_cost_usd=665476.4349328616,
                psv_fuel=210.10299368814344,
                psv_trips=21.641510079539724,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=28.28500456,
                rig_total_co2=7288.559668819994,
                rig_total_fuel=2299.230179438484,
                spread_cost=300000,
                support_co2=723.317028103717,
                total_co2=8968.41610378691,
                total_cost=54017376.3233192,
                total_days=84.676843946228,
                total_fuel=2829.2105372107735,
                total_fuel_cost=3168715.801676066,
                total_rig_and_spread_cost=50806106.3677368,
                transit_co2=322.5394068632,
                transit_fuel=101.74744696,
                transit_time=3.38888889,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
        (
            'Concept H3',
            dict(
                operational_days=82.25685563839734,
                transit_time=3.38888889,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=25.65172463,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.54429240,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.1000,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=92.27495386,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                operational_days=82.25685563839734,
                transit_time=3.38888889,
                total_days=85.64574452839734,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=25.65172463,
                rig_total_fuel=2110.0302097658314,
                rig_total_co2=6688.795764957686,
                psv_co2=684.9254004248612,
                psv_cost_usd=684359.7372164202,
                psv_fuel=216.064795086707,
                psv_trips=22.255601210724343,
                helicopter_co2=58.47769085548005,
                helicopter_cost_usd=238890.4517037685,
                helicopter_fuel=18.505598371987357,
                helicopter_trips=20.187925495979375,
                ahv_fuel=200,
                ahv_cost=454000,
                transit_fuel=92.27495386,
                tugs=2,
                tugs_cost=9000,
                total_fuel=2636.8755570845256,
                total_co2=8358.710459974227,
                total_cost=54469471.88195049,
                logistic_cost=923250.1889201887,
                move_cost=2599681.2823232,
                total_rig_and_spread_cost=51387446.71703841,
                total_fuel_cost=2953300.6239346685,
                transit_co2=292.51160373619996,
                support_co2=743.4030912803413,
            ),
        ),
        (
            'Concept GVA4000',
            dict(
                operational_days=67.70856460847466,
                transit_time=0.31944444,
                rig_day_rate_usd_d=300000,
                spread_cost=300000,
                rig_fuel_per_day=32.92071366,
                co2_emission_per_tonne_fuel=3.1700,
                psv_visits_per_7_days=1.5,
                deck_efficiency=0.88831782,
                psv_fuel_per_trip=9.7083333333,
                psv_time_per_trip_d=0.9444444444,
                psv_fuel_cost_usd_t=2000,
                psv_day_rate=12000.0000,
                helicopter_trips_per_7_days=1.5,
                helicopter_factor=1.0700,
                helicopter_fuel_consumption_per_trip_t=0.9166666667,
                helicopter_co2_emission_per_tonne_fuel=3.16,
                helicopter_fuel_cost_usd_t=2000,
                helicopter_charter_price_usd=10000.0000,
                ahv_fuel=200,
                marine_diesel_oil_price_usd_t=770,
                ahv_day_rate=15000,
                ahv_days_per_location=20,
                transit_fuel=16.27060549,
                number_of_tugs=2,
                tugs_day_rate=4500,
                total_fuel_price=1120.0000,
            ),
            SemiCO2PerWellResult(
                ahv_cost=454000,
                ahv_fuel=200,
                operational_days=67.70856460847466,
                helicopter_co2=45.18177403988812,
                helicopter_cost_usd=184574.56598006203,
                helicopter_fuel=14.298029759458265,
                helicopter_trips=15.59785064611455,
                logistic_cost=656192.9169464228,
                move_cost=672889.7421487999,
                psv_co2=472.0081710201417,
                psv_cost_usd=471618.3509663607,
                psv_fuel=148.89847666250526,
                psv_trips=15.337182145546764,
                rig_day_rate_usd_d=300000,
                rig_fuel_per_day=32.92071366,
                rig_total_co2=7065.975228942496,
                rig_total_fuel=2229.014267805204,
                spread_cost=300000,
                support_co2=517.1899450600298,
                total_co2=8268.742993405825,
                total_cost=43664867.69846853,
                total_days=68.02800904847466,
                total_fuel=2608.4813797171673,
                total_fuel_cost=2921499.1452832273,
                total_rig_and_spread_cost=40816805.42908479,
                transit_co2=51.577819403300005,
                transit_fuel=16.27060549,
                transit_time=0.31944444,
                tugs=2,
                tugs_cost=9000,
            ),
        ),
    ),
)
def test_calculate_semi_ata_co2_per_well(name, input, output):
    assert calculate_semi_ata_co2_per_well(**input) == output


@pytest.mark.django_db
def test_calculate_custom_semi_ata_co2_per_well(concept_h3):
    project = ProjectFactory(
        fuel_density=0.85,
        co2_emission_per_tonne_fuel=3.17,
        fuel_total_price=1120.0000,
        psv_calls_per_week=1.5,
        marine_diesel_oil_price=770,
        psv_day_rate=12000.0000,
        psv_speed=12,
        psv_avg_fuel_transit_consumption=12.0000,
        psv_avg_fuel_dp_consumption=5.5000,
        psv_loading_time=0.2500,
        psv_fuel_price=2000,
        helicopter_no_flights_per_week=1.5000,
        helicopter_rate_per_trip=10000.0000,
        helicopter_avg_fuel_consumption=12.0000,
        helicopter_fuel_price=2000,
        ahv_avg_fuel_consumption=10,
        ahv_day_rate=15000,
        ahv_no_days_per_location=20,
        tugs_day_rate=4500,
        tugs_move_speed=3.0,
        tugs_avg_move_fuel_consumption=20,
        helicopter_cruise_speed=120.0000,
    )
    concept_h3.project = project
    concept_h3.save()
    plan = PlanFactory(
        project=project,
        reference_operation_jackup=None,
        reference_operation_semi=concept_h3,
    )
    well = CustomWellFactory(metocean_days_above_hs_5=2.4, project=project)
    plan_well = PlanWellRelationFactory(
        plan=plan,
        well=well,
        distance_from_previous_location=10,
        distance_to_helicopter_base=110.0000,
        distance_to_psv_base=100.0000,
        semi_positioning_time=0.25,
        operational_time=82.2568556384209,
    )
    assert calculate_custom_semi_ata_co2_per_well(
        rig=concept_h3, plan=plan, plan_well=plan_well
    ) == SemiCO2PerWellResult(
        ahv_cost=454000,
        ahv_fuel=200,
        operational_days=82.2568556384209,
        helicopter_co2=58.47769085261102,
        helicopter_cost_usd=238890.45169938912,
        helicopter_fuel=18.505598371079437,
        helicopter_trips=20.187925495723025,
        logistic_cost=923250.1879733371,
        move_cost=2599681.2816558685,
        psv_co2=684.9253994705972,
        psv_cost_usd=684359.736273948,
        psv_fuel=216.06479478567735,
        psv_trips=22.255601179640585,
        rig_day_rate_usd_d=300000,
        rig_fuel_per_day=25.651724625008782,
        rig_total_co2=6688.79576365812,
        rig_total_fuel=2110.030209355874,
        spread_cost=300000,
        support_co2=743.4030903232082,
        total_co2=8358.710457715648,
        total_cost=54469471.880034976,
        total_days=85.64574452730979,
        total_fuel=2636.8755563720374,
        total_fuel_cost=2953300.623136682,
        total_rig_and_spread_cost=51387446.71638587,
        transit_co2=292.5116037343189,
        transit_fuel=92.2749538594066,
        transit_time=3.388888888888889,
        tugs=2,
        tugs_cost=9000,
    )


@pytest.mark.django_db
class TestCalculateCustomSemiCO2PerWell:
    def test_calculate_custom_semi_co2_per_well_for_dp(self, concept_cs60):
        assert calculate_custom_semi_co2_per_well(
            plan=PlanFactory(), plan_well=PlanWellRelationFactory(), rig=concept_cs60
        )

    def test_calculate_custom_semi_co2_per_well_for_ata(self, concept_h3):
        assert calculate_custom_semi_co2_per_well(
            plan=PlanFactory(), plan_well=PlanWellRelationFactory(), rig=concept_h3
        )


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                reference_operational_days=62,
                efficiency=1.000000000000,
                weather_factor=0.012000000000,
            ),
            62.74400000,
        ),
        (
            'Concept CS50',
            dict(
                reference_operational_days=62,
                efficiency=0.892023268446,
                weather_factor=0.013828788133,
            ),
            67.32042310181133,
        ),
        (
            'Concept GM4000',
            dict(
                reference_operational_days=62,
                efficiency=0.762553548613,
                weather_factor=0.013751462219,
            ),
            72.66704398157401,
        ),
        (
            'Concept GM7500',
            dict(
                reference_operational_days=62,
                efficiency=0.949806239705,
                weather_factor=0.012174295590,
            ),
            64.82948175210667,
        ),
        (
            'Concept GM4D',
            dict(
                reference_operational_days=62,
                efficiency=0.698312847099,
                weather_factor=0.015641279049,
            ),
            75.43949495427934,
        ),
        (
            'Concept H6',
            dict(
                reference_operational_days=62,
                efficiency=0.975722854713,
                weather_factor=0.013010464467,
            ),
            63.810104135483336,
        ),
        (
            'Concept H4',
            dict(
                reference_operational_days=62,
                efficiency=0.558017554888,
                weather_factor=0.016441085886,
            ),
            81.287955056228,
        ),
        (
            'Concept H3',
            dict(
                reference_operational_days=62,
                efficiency=0.534016867860,
                weather_factor=0.016068056612,
            ),
            82.25685563839734,
        ),
        (
            'Concept GVA4000',
            dict(
                reference_operational_days=62,
                efficiency=0.884042260946,
                weather_factor=0.014768463348,
            ),
            67.70856460847466,
        ),
    ),
)
def test_calculate_semi_well_operational_days(name, input, output):
    assert calculate_semi_well_operational_days(**input) == output


@pytest.mark.django_db
@pytest.mark.parametrize(
    'name, input, output',
    (
        (
            'Concept CS60',
            dict(
                operational_days=62.74400000,
                efficiency=1.000000000000,
                weather_factor=0.012000000000,
            ),
            62,
        ),
        (
            'Concept CS50',
            dict(
                operational_days=67.32042310181133,
                efficiency=0.892023268446,
                weather_factor=0.013828788133,
            ),
            61.99999999999999,
        ),
        (
            'Concept GM4000',
            dict(
                operational_days=72.66704398157401,
                efficiency=0.762553548613,
                weather_factor=0.013751462219,
            ),
            62.00000000000001,
        ),
        (
            'Concept GM7500',
            dict(
                operational_days=64.82948175210667,
                efficiency=0.949806239705,
                weather_factor=0.012174295590,
            ),
            62.00000000000001,
        ),
        (
            'Concept GM4D',
            dict(
                operational_days=75.43949495427934,
                efficiency=0.698312847099,
                weather_factor=0.015641279049,
            ),
            62.00000000000001,
        ),
        (
            'Concept H6',
            dict(
                operational_days=63.810104135483336,
                efficiency=0.975722854713,
                weather_factor=0.013010464467,
            ),
            62,
        ),
        (
            'Concept H4',
            dict(
                operational_days=81.287955056228,
                efficiency=0.558017554888,
                weather_factor=0.016441085886,
            ),
            62,
        ),
        (
            'Concept H3',
            dict(
                operational_days=82.25685563839734,
                efficiency=0.534016867860,
                weather_factor=0.016068056612,
            ),
            62,
        ),
        (
            'Concept GVA4000',
            dict(
                operational_days=67.70856460847466,
                efficiency=0.884042260946,
                weather_factor=0.014768463348,
            ),
            61.99999999999999,
        ),
    ),
)
def test_calculate_semi_well_reference_operational_days(name, input, output):
    assert calculate_semi_well_reference_operational_days(**input) == output


@pytest.mark.django_db
class TestCalculateCustomSemiWellOperationalDays:
    def test_calculate_well_operational_days_for_reference_rig(self):
        custom_rig = CustomSemiRigFactory()
        plan = PlanFactory(
            reference_operation_jackup=None,
            reference_operation_semi=custom_rig,
        )
        plan_well = PlanWellRelationFactory(plan=plan, operational_time=62)

        assert (
            calculate_custom_semi_well_operational_days(plan=plan, plan_well=plan_well, rig=custom_rig)
            == plan_well.operational_time
        )

    def test_calculate_well_operational_days_for_custom_rig(self, concept_cs60, concept_h3):
        plan = PlanFactory(
            reference_operation_jackup=None,
            reference_operation_semi=concept_cs60,
        )
        plan_well = PlanWellRelationFactory(plan=plan, operational_time=62.74400000, well__metocean_days_above_hs_5=2.4)
        assert (
            calculate_custom_semi_well_operational_days(plan=plan, plan_well=plan_well, rig=concept_h3)
            == 82.2568556384209
        )
