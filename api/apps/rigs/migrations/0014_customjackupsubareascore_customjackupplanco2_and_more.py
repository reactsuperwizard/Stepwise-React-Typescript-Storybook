# Generated by Django 4.0.2 on 2022-06-22 13:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0015_alter_plan_wells_alter_planwellrelation_well'),
        ('rigs', '0013_rename_bop_diamater_wp_max_conceptdrillship_bop_diameter_wp_max_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomJackupSubareaScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rig_status', models.FloatField()),
                ('topside_efficiency', models.FloatField()),
                ('deck_efficiency', models.FloatField()),
                ('move_and_installation', models.FloatField()),
                ('capacities', models.FloatField()),
                ('co2', models.FloatField()),
                (
                    'rig',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='subarea_score',
                        to='rigs.customjackuprig',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomJackupPlanCO2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tugs_cost', models.FloatField(blank=True, help_text='Total tugs cost (USD)', null=True)),
                ('helicopter_trips', models.FloatField(blank=True, help_text='Number of helicopter trips', null=True)),
                (
                    'helicopter_fuel',
                    models.FloatField(blank=True, help_text='Total helicopter fuel consumption (tons)', null=True),
                ),
                ('helicopter_cost', models.FloatField(blank=True, help_text='Total helicopter cost (USD)', null=True)),
                (
                    'helicopter_co2',
                    models.FloatField(blank=True, help_text='Helicopter CO2 emission (tons)', null=True),
                ),
                ('psv_trips', models.FloatField(blank=True, help_text='Number of PSV trips', null=True)),
                ('psv_fuel', models.FloatField(blank=True, help_text='Total PSV fuel consumption (tons)', null=True)),
                ('psv_cost', models.FloatField(blank=True, help_text='Total PSV CO2 cost (USD)', null=True)),
                ('psv_co2', models.FloatField(blank=True, help_text='Total PSV CO2 emission (tons)', null=True)),
                ('cost_per_day', models.FloatField(blank=True, help_text='Rig day rate (USD)', null=True)),
                ('total_fuel', models.FloatField(blank=True, help_text='Total fuel consumption (tons)', null=True)),
                ('total_cost', models.FloatField(blank=True, help_text='Total cost (USD)', null=True)),
                ('total_co2', models.FloatField(blank=True, help_text='Total CO2 emission (tons)', null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.plan')),
                (
                    'rig',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='co2_plans', to='rigs.customjackuprig'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Custom Jackup Plan CO2',
                'verbose_name_plural': "Custom Jackup Plan CO2's",
            },
        ),
        migrations.AddConstraint(
            model_name='customjackupplanco2',
            constraint=models.UniqueConstraint(fields=('plan', 'rig'), name='unique_custom_jackup_plan_co2'),
        ),
    ]
