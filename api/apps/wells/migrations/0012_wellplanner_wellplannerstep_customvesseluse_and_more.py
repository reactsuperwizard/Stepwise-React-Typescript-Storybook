# Generated by Django 4.0.2 on 2022-07-21 09:06

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('emps', '0006_customoperationefficiency_rig_planner_and_more'),
        ('projects', '0027_conceptcarboncapturestoragesystem_conceptcement_and_more'),
        ('wells', '0011_alter_customwell_project'),
    ]

    operations = [
        migrations.CreateModel(
            name='WellPlanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('operator', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                (
                    'current_step',
                    models.CharField(
                        choices=[
                            ('VEHICLES_PLANNING', 'Vehicles Planning'),
                            ('WELL_PLANNING', 'Well Planning'),
                            ('WELL_REVIEWING', 'Well Reviewing'),
                            ('WELL_REPORTING', 'Well Reporting'),
                        ],
                        max_length=32,
                    ),
                ),
                ('field', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                (
                    'rig_planner',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.rigplanner'),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WellPlannerStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'duration',
                    models.FloatField(
                        help_text='Phase duration in days', validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    'phase',
                    models.CharField(
                        choices=[
                            ('TRANSIT', 'Transit / Stand by'),
                            ('POSITIONING', 'Positioning'),
                            ('TOP_HOLE_SECTION', 'Top hole section'),
                            ('TRANSPORT_SECTION', 'Transport section'),
                            ('RESERVOIR_SECTION', 'Reservoir section'),
                            ('COMPLETION', 'Completion'),
                            ('WELL_INTERVENTION', 'Well intervention'),
                            ('PLUG_AND_ABANDON', 'Plug and abandon'),
                            ('WAITING_ON_WEATHER', 'Waiting on weather'),
                            ('DOWNTIME', 'Downtime'),
                            ('MOBILIZING', 'Mobilizing'),
                            ('WARM_STACKED', 'Warm stacked'),
                            ('COLD_STACKED', 'Cold stacked'),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    'mode',
                    models.CharField(
                        choices=[
                            ('TRANSIT', 'Transit / Stand by'),
                            ('POS_MOORE', 'Pos moore'),
                            ('DP', 'Dynamic positioning'),
                            ('ANCHOR', 'Anchor'),
                        ],
                        max_length=16,
                    ),
                ),
                ('season', models.CharField(choices=[('SUMMER', 'Summer'), ('WINTER', 'Winter')], max_length=16)),
                (
                    'cement_volume',
                    models.FloatField(
                        blank=True,
                        help_text='Volume of cement in cubic meters',
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'steel_weight',
                    models.FloatField(
                        blank=True,
                        help_text='Weight of steel in mT',
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'carbon_capture_storage_system',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to='projects.customcarboncapturestoragesystem',
                    ),
                ),
                (
                    'cement',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='projects.customcement'
                    ),
                ),
                (
                    'emp_initiatives',
                    models.ManyToManyField(
                        blank=True, related_name='well_planner_steps', to='emps.CustomEmpInitiative'
                    ),
                ),
                (
                    'external_supply',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to='projects.customexternalsupply',
                    ),
                ),
                (
                    'operation_efficiencies',
                    models.ManyToManyField(
                        blank=True, related_name='well_planner_steps', to='emps.CustomOperationEfficiency'
                    ),
                ),
                (
                    'steel',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='projects.customsteel'
                    ),
                ),
                (
                    'well_planner',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wells.wellplanner'),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomVesselUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'days',
                    models.FloatField(
                        help_text='Days of operation', validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.customvessel')),
                (
                    'well_planner',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wells.wellplanner'),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomHelicopterUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'fuel',
                    models.FloatField(
                        help_text='Fuel consumption per hour in liters',
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ('trips', models.PositiveIntegerField(help_text='Number of roundtrip flights')),
                (
                    'trip_duration',
                    models.FloatField(
                        help_text='Duration of a roundtrip flight',
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    'helicopter',
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.customhelicopter'),
                ),
                (
                    'well_planner',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wells.wellplanner'),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
